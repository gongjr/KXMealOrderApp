buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile files('libs/eventbus.jar')
    compile files('libs/guice-3.0-no_aop.jar')
    compile files('libs/jsr305-1.3.9.jar')
    compile files('libs/javax.inject-1.jar')
    compile files('libs/xstream-1.4.7.jar')
    compile files('libs/android-async-http-1.4.5.jar')
    compile files('libs/LklMidServiceAidl_V1.0.4.5021.0_20160722.jar')
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    // And ProGuard rules for RxJava!
    compile 'com.artemzin.rxjava:proguard-rules:1.1.6.0'
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
        //批量打包--指定配置文件
        //不同的渠道商对应的各自AndroidManifest
        //AndroidManifest的application标签只用配置渠道号的值
        //其他公共配置都放在公共的AndroidManifest.xml中
//        one {
//            manifest.srcFile 'tests/AndroidManifest.xml'
//        }
//        two {
//            manifest.srcFile 'tests/AndroidManifest.xml'
//        }
//        instrumentTest.setRoot('tests')

    }

    //批量打包--声明
//    productFlavors {
//        one {
//            //这里可以配置不同的包名
//        }
//        two {
//        //这里可以配置不同的包名
//        }
//}

    /**
     *将.so文件打包重Native_Libs2
     */
//    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
//        destinationDir file("$projectDir/libs")
//        baseName "Native_Libs2"
//        extension "jar"
//        from fileTree(dir: "libs", include: "***/*//*.so")
//        into "lib"
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn(nativeLibsToJar)
//    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    /**
     * 声明打包签名文件
     * 注签名密码放在这边是不安全的
     */
    signingConfigs {
        release {
            keyAlias 'kxlive'
            keyPassword 'kxlive'
            storeFile file('/studiokey_kxlive.jks')
            storePassword 'kxlive'
        }
    }

    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆否
            minifyEnabled true

            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true

            //签名引用
            signingConfig signingConfigs.release

            //加载默认混淆配置文件 progudard-android.txt在sdk目录里面，不用管，eclipse中是把
            // proguard-rules.pro是我自己配的混淆文件
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        debug{
            buildConfigField "boolean", "LOG_DEBUG", "true"// 显示Log，调试
            minifyEnabled false//混淆代码，调试
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}


allprojects {
    repositories {
        jcenter()
    }
}